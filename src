DROP DATABASE IF EXISTS sistema_vendas;
CREATE DATABASE sistema_vendas;
USE sistema_vendas;
-- Tabela de Clientes
CREATE TABLE Clientes (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    telefone VARCHAR(15)
);

-- Tabela de Produtos
CREATE TABLE Produtos (
    id_produto INT AUTO_INCREMENT PRIMARY KEY,
    nome_produto VARCHAR(100) NOT NULL,
    preco DECIMAL(10,2) NOT NULL,
    quantidade_estoque INT NOT NULL
);

-- Tabela de Vendas
CREATE TABLE Vendas (
    id_venda INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT,
    id_produto INT,
    quantidade_vendida INT NOT NULL,
    data_venda DATE NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente) ON DELETE CASCADE,
    FOREIGN KEY (id_produto) REFERENCES Produtos(id_produto) ON DELETE CASCADE
);
-- Inserir dados na tabela Clientes
INSERT INTO Clientes (nome, email, telefone) VALUES
('João Silva', 'joao.silva@email.com', '123456789'),
('Maria Oliveira', 'maria.oliveira@email.com', '987654321'),
('Carlos Santos', 'carlos.santos@email.com', '543216789');

-- Inserir dados na tabela Produtos
INSERT INTO Produtos (nome_produto, preco, quantidade_estoque) VALUES
('Produto A', 50.00, 100),
('Produto B', 30.00, 200),
('Produto C', 20.00, 150);

-- Inserir dados na tabela Vendas
INSERT INTO Vendas (id_cliente, id_produto, quantidade_vendida, data_venda) VALUES
(1, 1, 2, '2024-09-01'),
(2, 2, 3, '2024-09-02'),
(3, 1, 1, '2024-09-03'),
(1, 3, 5, '2024-09-04'),
(2, 3, 2, '2024-09-05');
-- Mostrar todas as vendas realizadas, incluindo o nome do cliente e o nome do produto
SELECT 
    Vendas.id_venda, 
    Clientes.nome AS Nome_Cliente, 
    Produtos.nome_produto AS Nome_Produto, 
    Vendas.quantidade_vendida, 
    Vendas.data_venda
FROM 
    Vendas
JOIN 
    Clientes ON Vendas.id_cliente = Clientes.id_cliente
JOIN 
    Produtos ON Vendas.id_produto = Produtos.id_produto;

-- Mostrar todas as compras realizadas por um cliente específico (por exemplo, Cliente com id_cliente = 1)
SELECT 
    Vendas.id_venda, 
    Clientes.nome AS Nome_Cliente, 
    Produtos.nome_produto AS Nome_Produto, 
    Vendas.quantidade_vendida, 
    Vendas.data_venda
FROM 
    Vendas
JOIN 
    Clientes ON Vendas.id_cliente = Clientes.id_cliente
JOIN 
    Produtos ON Vendas.id_produto = Produtos.id_produto
WHERE 
    Vendas.id_cliente = 1;

-- Exibir o total de vendas realizadas por produto
SELECT 
    Produtos.nome_produto AS Nome_Produto, 
    SUM(Vendas.quantidade_vendida) AS Total_Vendas
FROM 
    Vendas
JOIN 
    Produtos ON Vendas.id_produto = Produtos.id_produto
GROUP BY 
    Produtos.nome_produto;
-- Atualizar o estoque de um produto após uma venda (subtrair a quantidade vendida do estoque)
UPDATE Produtos
SET quantidade_estoque = quantidade_estoque - (
    SELECT quantidade_vendida FROM Vendas WHERE id_venda = 1
)
WHERE id_produto = (
    SELECT id_produto FROM Vendas WHERE id_venda = 1
);

-- Atualizar as informações de um cliente
UPDATE Clientes
SET email = 'joao.silva.novo@email.com', telefone = '111222333'
WHERE id_cliente = 1;

-- Deletar uma venda e, se necessário, deletar o cliente associado
DELETE FROM Vendas WHERE id_venda = 2;

-- Se necessário, deletar o cliente associado (verificando se há outras vendas associadas)
DELETE FROM Clientes
WHERE id_cliente = 2 AND NOT EXISTS (
    SELECT 1 FROM Vendas WHERE id_cliente = 2
);
